# Generated by Django 5.1.5 on 2025-04-02 04:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Assignments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assignment_number", models.SmallIntegerField()),
                ("title", models.TextField()),
                ("lock_date", models.DateField()),
                ("pdf_filepath", models.TextField(blank=True, null=True, unique=True)),
                ("has_base_code", models.BooleanField()),
                ("moss_report_directory_path", models.TextField(unique=True)),
                ("bulk_ai_directory_path", models.TextField(unique=True)),
                ("language", models.TextField()),
                ("has_policy", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="BaseFiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.TextField()),
                ("file_path", models.TextField(unique=True)),
            ],
            options={
                "db_table_comment": "Lists base files given to students and used to exclude shared files in MOSS similarity reports.",
            },
        ),
        migrations.CreateModel(
            name="BulkSubmissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("directory_path", models.TextField(unique=True)),
            ],
            options={
                "db_table_comment": "For a given course and assignment, this table stores the directory containing all student submissions.",
            },
        ),
        migrations.CreateModel(
            name="Constraints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifier", models.TextField()),
                ("is_library", models.BooleanField()),
                ("is_keyword", models.BooleanField()),
                ("is_permitted", models.BooleanField()),
            ],
            options={
                "db_table_comment": "Lists the permitted/banned keywords and libraries of assignments.",
            },
        ),
        migrations.CreateModel(
            name="PolicyViolations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("line_number", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table_comment": "Lists detected instances where a student's submission violates the assignment's constraints.",
            },
        ),
        migrations.CreateModel(
            name="RequiredSubmissionFiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.TextField()),
                (
                    "similarity_threshold",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
            ],
            options={
                "db_table_comment": "List of files that students are required to submit to CodeGrade for a given assignment.",
            },
        ),
        migrations.CreateModel(
            name="Submissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("grade", models.DecimalField(decimal_places=2, max_digits=5)),
                ("created_at", models.DateField(blank=True, null=True)),
                ("flagged", models.BooleanField()),
                (
                    "file_path",
                    models.TextField(
                        db_comment="Relative path from the bulk submission directory.",
                        unique=True,
                    ),
                ),
            ],
            options={
                "db_table_comment": "Stores relevant data for individual student submissions.",
            },
        ),
    ]
